name: Create release from tag
on:
  push:
    tags: # triggered once a git tag is published
      - '*'

  workflow_call:
    inputs:
      commit_mode:
        type: boolean
        required: false
        default: true

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # ******* calculate versions
      - name: Detect previous version
        run: |
          if [[ "$(git tag | wc -l | sed 's/^ *//g')" = '1' ]]
          then
            tag='0.0.0'
          else
            tag="$(git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=1`)"
          fi
          echo "PREVIOUS_VERSION=$tag" >> $GITHUB_ENV
      - name: Detect current version
        run: |
          if [[ "$(git tag | wc -l | sed 's/^ *//g')" = '0' ]]
          then
            tag='0.0.1'
          else
            tag="$(git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=0`)"
          fi
          echo "CURRENT_VERSION=$tag" >> $GITHUB_ENV
      # ******* end calculate versions

      # ***** generating changelogs
      - name: Download release builder config (Fix missing config file)
        run: |
          sudo apt-get install curl -y
          curl https://raw.githubusercontent.com/owen2345/reusable-ci-cd-actions/main/.github/workflows/release_builder.json --output .github/workflows/release_builder.json

      - name: Changelog from PRs
        id: changelog_prs
        if: inputs.commit_mode != true
        uses: mikepenz/release-changelog-builder-action@v3.1.1
        with:
          configuration: ".github/workflows/release_builder.json"
          fromTag: ${{env.PREVIOUS_VERSION}}
          toTag: ${{env.CURRENT_VERSION}}
          commitMode: ${{inputs.commit_mode}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove downloaded builder config (fix)
        run: rm -f .github/workflows/release_builder.json

      - name: Changelog from commits
        id: changelog_commits
        if: inputs.commit_mode == true
        run: |
          MY_STRING=$(git log --pretty=format:"%s ([%cn](https://github.com/%cn) - %h)" $TAG_RANGE)
          MY_STRING="* ${MY_STRING//'%'/'%25'}"
          MY_STRING="${MY_STRING//$'\n'/'%0A * '}"
          MY_STRING="${MY_STRING//$'\r'/'%0D'}"
          echo "::set-output name=changelog::$MY_STRING"
        env:
          TAG_RANGE: ${{env.PREVIOUS_VERSION}}..${{env.CURRENT_VERSION}}
      - name: Calc changelog
        id: changelog
        run: |
          MY_STRING="${CHANGELOG//'%'/'%25'}"
          MY_STRING="${MY_STRING//$'\n'/'%0A'}"
          MY_STRING="${MY_STRING//$'\r'/'%0D'}"
          echo "::set-output name=changelog::$MY_STRING"
        env:
          CHANGELOG: ${{inputs.commit_mode && steps.changelog_commits.outputs.changelog || steps.changelog_prs.outputs.changelog}}

      # ***** Publish release
      - name: Set current
        run: echo "CURRENT_DATE=$(date)" >> $GITHUB_ENV

      - name: Publish release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          name: Release ${{ env.CURRENT_VERSION }}
          tag: ${{ env.CURRENT_VERSION }}
          body: |
            ## ${{ inputs.commit_mode && 'Changes included' || 'Pull requests included' }} (${{env.CURRENT_DATE}})
            ${{ steps.changelog.outputs.changelog }}
            
            **Full Changelog**: https://github.com/${{github.repository}}/compare/${{env.PREVIOUS_VERSION}}...${{env.CURRENT_VERSION}}
          token: ${{ secrets.GITHUB_TOKEN }}
