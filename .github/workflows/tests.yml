#name: App tests
#on:
#  push:
#    branches:
#      - main
#      - master
#  pull_request:
#
#jobs:
#  app-tests:
#    uses: owen2345/reusable-ci-cd-actions/.github/workflows/tests.yml@main
#    with:
#      prepare_db_cmd: null
#      copy_env: false
#      run_rubocop: true
#      rspec_cmd: 'bundle exec rspec'


name: App tests
on:
  workflow_call:
    inputs:
      copy_env:
        type: boolean
        required: false
        default: true

      # Backend
      copy_db_yml:
        type: boolean
        required: false
        default: false
      prepare_db_cmd:
        type: string
        required: false
        default: bundle exec rails db:setup
      rspec_cmd:
        type: string
        required: false
        default: bundle exec rspec
      run_rubocop:
        type: boolean
        required: false
        default: true

      # Frontend
      frontend_tests_cmd:
        type: string
        required: false
      eslint_cmd:
        type: string
        required: false

      # test coverage
      publish_coverage:
        type: boolean
        required: false
        default: false
      min_coverage:
        type: number
        required: false
        default: 90

      debug:
        type: boolean
        required: false
        default: false

    secrets:
      CC_TEST_REPORTER_ID:
        required: false

jobs:
  rspec:
    runs-on: ubuntu-latest
    env:
      DOCKER_CLIENT_TIMEOUT: 120
      COMPOSE_HTTP_TIMEOUT: 120
      CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
    steps:
      # common steps
      - uses: actions/checkout@v2
      - name: Copy env vars file
        run: cp .env-example .env
        if: inputs.copy_env
      - name: Copy DB Config
        run: cp config/database-example.yml config/database.yml
        if: inputs.copy_db_yml
      - name: Cancel previous Workflow Actions
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      # docker caching
      - name: Cache ruby gems
        uses: actions/cache@v3
        with:
          key: ruby-gems
          path: |
            /usr/local/bundle/

      - name: download docker-compose cache
        run: docker-compose pull
      - uses: satackey/action-docker-layer-caching@v0.0.11 # Cache or restore docker cache
        continue-on-error: true # Ignore the failure of a step and avoid terminating the job.
        with:
          key: app-cache-${{ hashFiles('Dockerfile', 'Gemfile.lock', 'yarn.lock') }}
          restore-keys: app-cache-${{ hashFiles('Dockerfile', 'Gemfile.lock', 'yarn.lock') }}

      - name: Prepare backend DB
        env:
          ACTION_CMD: ${{ inputs.prepare_db_cmd }}
        run: docker-compose run test /bin/sh -c "sleep 5 && $ACTION_CMD"
        if: inputs.prepare_db_cmd

      - name: Check frontend tests
        env:
          TESTS_CMD: ${{ inputs.frontend_tests_cmd }}
        run: docker-compose run test /bin/sh -c "$TESTS_CMD"
        if: inputs.frontend_tests_cmd

      - name: Check backend tests
        env:
          TESTS_CMD: ${{ inputs.rspec_cmd }}
        run: docker-compose run test /bin/sh -c "$TESTS_CMD"
        if: inputs.rspec_cmd

      - name: Code style (Backend)
        run: docker-compose run test /bin/sh -c "bundle exec rubocop"
        if: inputs.run_rubocop

      - name: Code style (Frontend)
        run: docker-compose run test /bin/sh -c "$ESLINT_CMD"
        env:
          ESLINT_CMD: ${{ inputs.eslint_cmd }}
        if: inputs.eslint_cmd

      - name: Upload final coverage results
        uses: actions/upload-artifact@master
        with:
          name: final-coverage-report
          path: coverage
        if: inputs.publish_coverage

      - name: Simplecov Report
        uses: aki77/simplecov-report-action@v1
        with:
          failedThreshold: ${{ inputs.min_coverage }}
          token: ${{ secrets.GITHUB_TOKEN }}
        if: inputs.publish_coverage

      - name: Upload results to codeclimate # requires github->secrets->CC_TEST_REPORTER_ID
        run: |
          docker-compose run test bash -c "
            apt-get install wget -y &&
            wget -O ./cc-test-reporter https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 &&  chmod +x ./cc-test-reporter &&
            ./cc-test-reporter format-coverage -t simplecov -o coverage/codeclimate.json &&
            ./cc-test-reporter upload-coverage -i coverage/codeclimate.json
          "
        if: ${{ env.CC_TEST_REPORTER_ID != '' }}

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: inputs.debug && always()